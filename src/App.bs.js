// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ApolloClient from "rescript-apollo-client/src/ApolloClient.bs.js";
import * as Client from "@apollo/client";
import * as Graphql$FragmentReproduceIssue from "./Graphql.bs.js";
import * as ApolloClient__Cache_InMemory_InMemoryCache from "rescript-apollo-client/src/@apollo/client/cache/inmemory/ApolloClient__Cache_InMemory_InMemoryCache.bs.js";

function App$Fruits(Props) {
  var queryResult = Curry.app(Graphql$FragmentReproduceIssue.Fruits.use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        Graphql$FragmentReproduceIssue.Fruits.makeVariables(undefined)
      ]);
  var match = queryResult.data;
  if (match === undefined) {
    return "Data loading or failed";
  }
  var fruits = match.fruits;
  if (fruits !== undefined) {
    return React.createElement("ul", undefined, Belt_Array.map(fruits, (function (fruit) {
                      if (fruit === undefined) {
                        return null;
                      }
                      var id = fruit.id;
                      if (id === undefined) {
                        return null;
                      }
                      var name = fruit.fruit_name;
                      if (name === undefined) {
                        return null;
                      }
                      var family = Belt_Option.getWithDefault(Belt_Option.flatMap(fruit, (function (f) {
                                  return f.otherFruitFields.family;
                                })), "unknown");
                      return React.createElement("li", {
                                  key: id
                                }, name + " is in the " + family + " family");
                    })));
  } else {
    return "Data loading or failed";
  }
}

var Fruits = {
  make: App$Fruits
};

function App(Props) {
  var cache = ApolloClient__Cache_InMemory_InMemoryCache.make(undefined, undefined, undefined, undefined, undefined, undefined);
  var client = ApolloClient.make((function (param) {
          return "https://fruits-api.netlify.app/graphql";
        }), undefined, undefined, undefined, cache, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
  return React.createElement(Client.ApolloProvider, {
              client: client,
              children: React.createElement(App$Fruits, {})
            });
}

var make = App;

var $$default = App;

export {
  Fruits ,
  make ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
